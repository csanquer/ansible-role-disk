---
- name: install NFS client (Debian)
  apt:
    name: nfs-common
    update_cache: yes
  when: ansible_os_family == 'Debian'

- name: install NFS client (RedHat)
  yum:
    name: nfs-utils
    update_cache: yes
  when: ansible_os_family == 'RedHat'

- name: ensure some services are stopped
  service:
    name: "{{ item }}"
    state: stopped
  with_items: "{{ disk_stopped_services }}"

- name: wait for available devices
  wait_for:
    path: "{{ item.dev }}"
    state: present
    delay: "{{ item.delay | default(1) }}"
    sleep: "{{ item.sleep | default(1) }}"
    timeout: "{{ item.timeout | default(300) }}"
  with_items: "{{ disk_filesystems }}"

- name: format filesystems
  filesystem:
    dev: "{{ item.dev }}"
    fstype: "{{ item.fstype | default(disk_default_filesytem) }}"
    opts: "{{ item.opts | default(omit) }}"
    force: "{{ item.force | default('no') }}"
    resizefs: "{{ item.resizefs | default('no') }}"
  with_items: "{{ disk_filesystems }}"

- name: refresh facts
  setup:

- name: wait for available network filesystems
  wait_for:
    host: "{{ item.host }}"
    port: "{{ item.port }}"
    state: "{{ item.state | default('present') }}"
    delay: "{{ item.delay | default(5) }}"
    sleep: "{{ item.sleep | default(1) }}"
    timeout: "{{ item.timeout | default(300) }}"
  with_items: "{{ disk_network_filesystems }}"

- name: create mount points
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner | default(omit) }}"
    group: "{{ item.group | default(omit) }}"
    mode: "{{ item.mode | default('u=rwx,go=rx') }}"
  with_items: "{{ disk_mounts }}"

- name: mount volumes
  mount:
    path: "{{ item.path }}"
    src: "{{ item.src }}"
    fstype: "{{ item.fstype | default(disk_default_filesytem) }}"
    opts: "{{ item.opts | default(omit) }}"
    state: "{{ item.state | default('mounted') }}"
    dump: "{{ item.dump | default(omit) }}"
    passno: "{{ item.passno | default(omit) }}"
  with_items: "{{ disk_mounts }}"

- name: set mount points permissions
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner | default(omit) }}"
    group: "{{ item.group | default(omit) }}"
    mode: "{{ item.mode | default('u=rwx,go=rx') }}"
  with_items: "{{ disk_mounts }}"

- name: create extra paths
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner | default(omit) }}"
    group: "{{ item.group | default(omit) }}"
    mode: "{{ item.mode | default('u=rwx,go=rx') }}"
  with_items: "{{ disk_extra_paths }}"

- name: restart previous stopped services
  service:
    name: "{{ item }}"
    state: started
  when: disk_restart_services
  with_items: "{{ disk_stopped_services }}"
